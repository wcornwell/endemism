---
title: "endemism"
format: html
editor: visual
---

## Endemism

We love endemism

```{r}
#install packages


#load libraries
library(tidyr)
library(tidyverse)
library(data.table)
library(dplyr)

#read csvs
genus_end <- read.csv("data/australian_flora/genus_level_endemism_estimate.csv")

#wcvp <- fread(file = "data/wcvp/wcvp_names.csv", header = T)
#wcvp_distribution <- fread(file = "data/wcvp/wcvp_distribution.csv", header = T)


ng <- read.csv("data/other_countries_floras/sa_2022-07-12_072627325-BRAHMSOnlineData.csv")
nz <- fread("data/other_countries_floras/checklistofthenewzealandflora-seedplantsseptember2020.tsv")
nz2 <- fread("data/other_countries_floras/checklistofthenewzealandflora-fernsandlycophytesseptember2020.tsv")
nc <- read.csv("data/other_countries_floras/Florical_vers_7_I_2022.csv")
indo <- read.csv("data/other_countries_floras/oo_377596.csv")

redlist <- read.csv(file = "data/REDLIST_Folder/simple_summary.csv", header = T)

fivesource <- read.csv(file = "intermediate_data/summary_current.csv", header = T) #Contains outside Aus proportions and endemicity estimates
```

```         
##Adding NZ Data
```

```{r}
#combine nz and nz2 
nz <- rbind(nz, nz2)

#make new df for genus that are possibly endemic (ie score a 1 on genus_end df)
ausplants <- subset(genus_end, prop_endemic == 1)

#remove ? from genus column value in nz data
nz$Genus <- gsub("\\?", "", nz$Genus)

#make a subset for the genus in nz data that appear to have no genus 
no_genera_nz <- subset(nz, Genus == "")
nrow(no_genera_nz) #324 - a problem for another day
nz<-filter(nz, Origin!="Exotic")

ausplants$nz <- ausplants$genus %in% nz$Genus
```

##Adding NC column

```{r}
ausplants$nc <- ausplants$genus %in% nc$Genre
```

##Adding NG column

```{r}
ausplants$ng <- ausplants$genus %in% ng$Genus

```

##Add Indonesian column

```{r}
ausplants$indo <- ausplants$genus %in% indo$Genus
```

###Combining WCVP Distribution and the the Other Thingo

```{r}

wcvp_distribution <- read_csv('data/wcvp/wcvp_distribution.csv')
wcvp <- read_csv('data/wcvp/wcvp_names.csv')

wcvp_comb <- wcvp_distribution %>%
  left_join(wcvp, by = 'plant_name_id') 

wcvp_not_aus <- wcvp_comb %>%
  filter(region != "Australia") #removing all Australian plants

wcvp_aus <- wcvp_comb %>%
  filter(region == "Australia")

sort(unique(wcvp_comb$region)) #does not provide country, but general geographic region
sort(unique(wcvp_aus$area))
print(wcvp_not_aus[wcvp_not_aus$area == "", ])


```

### Adding WCVP Column

```{r}
ausplants$wcvp <- ausplants$genus %in% 
  wcvp_not_aus$genus 
```

### Adding Threatened Status

```{r}
library(dplyr)
library(data.table)
redlist <- redlist %>%
  filter(genusName %in% fivesource$genus) #Filters redlist data to only include genera within fivesource data

unique(redlist$redlistCategory) 
#[1] "Endangered"                 "Critically Endangered"      "Vulnerable"                
#[4] "Least Concern"              "Near Threatened"            "Lower Risk/near threatened"
#[7] "Data Deficient"             "Extinct"

print(redlist[redlist$redlistCategory == "Extinct", ]) #Is Extinct required, should remove? 

#redlist <- redlist %>%
  #filter(redlistCategory != "Extinct")

unique(redlist$genusName) #`182 genera`

counts <- redlist %>% #Creating counts frame for each threatened status
  group_by(genusName) %>%
  count(redlistCategory) %>%
  pivot_wider(names_from = redlistCategory, values_from = n, values_fill = NA) 

# Join the counts with fivesource.trial based on genera2
genus_with_status <- fivesource %>%
  left_join(counts, by = c("genus" = "genusName")) %>% #Lower Risk/ Near Threatened has one value - Maybe combine with Near Threatened?
  mutate_at(c(15:22), ~replace_na(.,0))

#Maybe add proportions??
```

```{r}
genus_with_status$species_number <- as.numeric(genus_with_status$species_number)

options(max.print = 10000)
print(rowSums(genus_with_status[15:22], na.rm = T) > genus_with_status$species_number)

comparison_result <- rowSums(genus_with_status[15:22], na.rm = TRUE) > genus_with_status$species_number


print(genus_with_status[comparison_result, ])
#Arthrotaxis has 2 vulnerable and 1 endangered, with 2 recorded species
#Genoplesium has one recorded spcies, but has critically endangered and one endangered
#Polypogon has one species but 2 least-concern

print(redlist[redlist$genusName == "Athrotaxis", ]) #Athrotaxis laxifolia, Athrotaxis cupressoides, Athrotaxis selaginoides
print(redlist[redlist$genusName == "Genoplesium", ]) #Genoplesium insigne, #Genoplesium baueri 
print(redlist[redlist$genusName == "Polypogon", ]) #Polypogon viridis, Polypogon monspeliensis
```

## Write CSV

```{r}
write_csv(genus_with_status,"intermediate_data/summary_current.csv")
```

## Adding Austraits data column - dispersal + growth form traits

```{r}
install.packages("austraits")
library(austraits)


summary <- read_csv('intermediate_data/summary_current.csv')

#make genus_list of genera included in our summary table
genus_list <- summary$genus

#load austraits
devtools::install_github("traitecoevo/austraits")
austraits <- load_austraits(version = "4.1.0", path = "intro/downloads")

austraits_joined <- left_join(austraits[["traits"]], austraits[["taxa"]], by = "taxon_name")

#find our genera in austraits list
genus_austraits1 <- austraits_joined[grepl(paste(genus_list, collapse = "|"), austraits_joined$taxon_name), ]

#extract species list from this because species names are the format they are stored in austraits data
species_list <- unique(genus_austraits1$taxon_name)

#make df with species from species_list 
austraits_species <- austraits$traits %>%
  filter(taxon_name %in% species_list)

#add genus column from first word of taxon_name
austraits_species <- austraits_species %>%
  mutate(genus = word(taxon_name, 1))

#make genera list where all traits for species in one genera are compiled
austraits_genera <- austraits_species %>%
  select(genus, trait_name, value) %>%
  pivot_wider(names_from = trait_name, values_from = value)

#join to summary list
summary_with_all_traits <- left_join(summary, austraits_genera, by = 'genus')

#austraits_genera df had 1080 items, but genus_list has 1063?
genus_in_ausgen <- austraits_genera$genus

non_matching <- genus_in_ausgen[!(genus_in_ausgen %in% summary$genus)]
print(non_matching) #there are 19 - maybe thats fine? they include orchidaceae and eucalyptus?

#we only want growth form and dispersal traits, so have included dispersal appendage, method, growth form, and seed mass as there was lots of data on that and its relevant to dispesion - and pretty sure there a 2006 cornwell paper somewhere about that...

summary_traits <- summary_with_all_traits[, c(1:22,28,36,42,49)]

#need to convert to characters to save as csv
summary_traits <- summary_traits %>%
  mutate(across(where(is.list), as.character))

write.csv(summary_traits, 'intermediate_data/summary_with_traits.csv')

summary_traits <- read_csv('intermediate_data/summary_with_traits.csv')

#get rid of first column which is just row numbers
summary_traits <- summary_traits[, -1]
```

```{r}
all_aus_gen <- read_csv('data/australian_flora/genus_level_endemism_estimate.csv')

colnames(summary_traits)

all_aus_gen$nz <- NA
all_aus_gen$nc <- NA
all_aus_gen$ng <- NA
all_aus_gen$wcvp <- NA
all_aus_gen$indo2 <- NA
all_aus_gen$prop_aus <- NA
all_aus_gen$n <- NA
all_aus_gen$ala <- NA
all_aus_gen$rowsums <- NA
all_aus_gen$current_knowledge <- 'non-endemic'
all_aus_gen$reason <- NA


#remove dupes from summary_traits df because we are going to join them later
non_end_gen <- all_aus_gen[!(all_aus_gen$genus %in% summary_traits$genus), ]

redlist <- read.csv(file = "data/REDLIST_Folder/simple_summary.csv", header = T)

redlist <- redlist %>%
  filter(genusName %in% non_end_gen$genus) #Filters redlist data to only include genera within fivesource data

unique(redlist$redlistCategory) 
#[1] "Least Concern"                     "Near Threatened"                   "Vulnerable"                        "Endangered"                        "Lower Risk/near threatened"       
#[6] "Lower Risk/conservation dependent" "Data Deficient"                    "Critically Endangered"             "Extinct"  

print(redlist[redlist$redlistCategory == "Extinct", ]) #Is Extinct required, should remove? 

#redlist <- redlist %>%
  #filter(redlistCategory != "Extinct")

unique(redlist$genusName) #325 genera`

counts <- redlist %>% #Creating counts frame for each threatened status
  group_by(genusName) %>%
  count(redlistCategory) %>%
  pivot_wider(names_from = redlistCategory, values_from = n, values_fill = NA) 

# Join the counts with all_aud_gen based on genera2
non_end_gen <- non_end_gen %>%
  left_join(counts, by = c("genus" = "genusName")) %>% #Lower Risk/ Near Threatened has one value - Maybe combine with Near Threatened?
  mutate_at(c(15:23), ~replace_na(.,0))

```

Now add austraits

```{r}

austraits_joined <- left_join(austraits[["traits"]], austraits[["taxa"]], by = "taxon_name")

non_end_genera_list <- non_end_gen$genus
  
#find our genera in austraits list
genus_austraits2 <- austraits_joined[grepl(paste(non_end_genera_list, collapse = "|"), austraits_joined$taxon_name), ]

#extract species list from this because species names are the format they are stored in austraits data
non_end_species_list <- unique(genus_austraits2$taxon_name)

#make df with species from species_list 
non_end_austraits_species <- austraits$traits %>%
  filter(taxon_name %in% non_end_species_list)

#add genus column from first word of taxon_name
non_end_austraits_species <- non_end_austraits_species %>%
  mutate(genus = word(taxon_name, 1))

#make genera list where all traits for species in one genera are compiled
non_end_austraits_genera <- non_end_austraits_species %>%
  select(genus, trait_name, value) %>%
  pivot_wider(names_from = trait_name, values_from = value)

#join to summary list
ne_summary <- left_join(non_end_gen, non_end_austraits_genera, by = 'genus')

#austraits_genera df had 1080 items, but genus_list has 1063?
genus_in_ausgen <- non_end_austraits_genera$genus

non_matching <- genus_in_ausgen[!(genus_in_ausgen %in% ne_summary$genus)]
print(non_matching) #there are 18 - ???

#we only want growth form and dispersal traits, so have included dispersal appendage, method, growth form, and seed mass as there was lots of data on that and its relevant to dispesion - and pretty sure there a 2006 cornwell paper somewhere about that...


which(colnames(ne_summary) == "dispersal_syndrome")

ne_summary_traits <- ne_summary[, c(1:23,26,37,52,56)]


#can't join because ne_summary_traits has an extra column to summary_traits - problem for another day?


```
